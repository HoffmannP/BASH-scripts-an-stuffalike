#!/usr/bin/python
# -*- coding: utf-8 -*-

print "Content-Type:  application/rss+xml"
print

import urllib2, BeautifulSoup, cgi, thread, xml.dom.minidom

def fullTextItem(description, url):
    global itemsToReplace
    try:
        page = urllib2.urlopen(url)
        document = BeautifulSoup.BeautifulSoup(page)
    finally:
        try:
            page = urllib2.urlopen(url)
            document = BeautifulSoup.BeautifulSoup(page)
        except urllib2.URLError as e:
            print url
            print e
            lock.acquire()
            itemsToReplace = itemsToReplace - 1
            lock.release()
            return
    meldung = document.find("div", "meldung_wrapper")
    tags = meldung.contents
    extracts = meldung.findAll(text=lambda text:isinstance(text, BeautifulSoup.Comment))
    extracts[len(extracts):] = meldung.findAll(["script", "noscript"])
    extracts[len(extracts):] = meldung.findAll(["span", "div"], "ISI_IGNORE")
    extracts[len(extracts):] = meldung.findAll("br", "clear")
    [extract.extract() for extract in extracts]
    images = meldung.findAll("img")
    for image in images:
        src = image['src'].split("/")
        if src[0] == "":
            image['src'] = "http://www.heise.de" + "/".join(src)
    anchors = meldung.findAll("a")
    for anchor in anchors:
        href = anchor['href'].split("/")
        if href[0] == "":
            anchor['href'] = "http://www.heise.de" + "/".join(href)

    lock.acquire()
    description.nodeValue = "<![CDATA[" + meldung.__str__() + "]]>"
    itemsToReplace = itemsToReplace - 1
    lock.release()
    
heiseFeed = "http://www.heise.de/newsticker/heise.rdf"
page = xml.dom.minidom.parse(urllib2.urlopen(heiseFeed))
items = page.getElementsByTagName("item")


items = items[:5]
itemsToReplace = len(items)
lock = thread.allocate_lock()


for item in items:
    thread.start_new_thread(fullTextItem, (
            item.getElementsByTagName("description")[0].firstChild, 
            "/".join(item.getElementsByTagName("link")[0].firstChild.nodeValue.split("/")[0:-2])
            ))
while itemsToReplace > 0:
    pass

print page.toprettyxml()
